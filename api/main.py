# generated by fastapi-codegen:
#   filename:  dog_walker.1.oas.yaml
#   timestamp: 2024-12-21T15:00:02+00:00

from __future__ import annotations

from typing import Optional, Union

from fastapi import FastAPI, Path

from .models import (
    Dog,
    DogsDogIdDeleteResponse,
    DogsDogIdDeleteResponse1,
    DogsDogIdDeleteResponse2,
    DogsDogIdDeleteResponse3,
    DogsDogIdGetResponse,
    DogsDogIdGetResponse1,
    DogsDogIdGetResponse2,
    DogsDogIdPutResponse,
    DogsDogIdPutResponse1,
    DogsDogIdPutResponse2,
    DogsDogIdPutResponse3,
    DogsGetResponse,
    DogsGetResponse1,
    DogsGetResponse2,
    DogsPostResponse,
    DogsPostResponse1,
    DogsPostResponse2,
    DogWithId,
)

app = FastAPI(
    title='Dog Walker API',
    description='Dog profile and scheduler management for dog walkers.',
    version='1.0.0',
    contact={
        'name': 'Dog Walker API Support',
        'url': 'https://dogusaurus.com/support',
        'email': 'info@dogwalker.com',
    },
    servers=[
        {
            'url': 'http://localhost:8080',
            'description': 'Mock server for development purposes.',
        }
    ],
)


@app.post(
    '/dogs',
    response_model=None,
    responses={
        '201': {'model': DogWithId},
        '422': {'model': DogsPostResponse},
        '401': {'model': DogsPostResponse1},
        '500': {'model': DogsPostResponse2},
    },
    tags=['Dogs'],
)
def add_dog(
    body: Dog,
) -> Optional[Union[DogWithId, DogsPostResponse, DogsPostResponse1, DogsPostResponse2]]:
    """
    Add a dog profile
    """
    pass


@app.get(
    '/dogs',
    response_model=DogsGetResponse,
    responses={'401': {'model': DogsGetResponse1}, '500': {'model': DogsGetResponse2}},
    tags=['Dogs'],
)
def get_all_dogs() -> Union[DogsGetResponse, DogsGetResponse1, DogsGetResponse2]:
    """
    List dog profiles
    """
    pass


@app.get(
    '/dogs/{dogId}',
    response_model=Dog,
    responses={
        '401': {'model': DogsDogIdGetResponse},
        '404': {'model': DogsDogIdGetResponse1},
        '500': {'model': DogsDogIdGetResponse2},
    },
    tags=['Dogs'],
)
def get_dog(
    dog_id: str = Path(..., alias='dogId')
) -> Union[Dog, DogsDogIdGetResponse, DogsDogIdGetResponse1, DogsDogIdGetResponse2]:
    """
    Get specific dog details
    """
    pass


@app.delete(
    '/dogs/{dogId}',
    response_model=None,
    responses={
        '204': {'model': DogsDogIdDeleteResponse},
        '401': {'model': DogsDogIdDeleteResponse1},
        '404': {'model': DogsDogIdDeleteResponse2},
        '500': {'model': DogsDogIdDeleteResponse3},
    },
    tags=['Dogs'],
)
def remove_dog_profile(dog_id: str = Path(..., alias='dogId')) -> Optional[
    Union[
        DogsDogIdDeleteResponse,
        DogsDogIdDeleteResponse1,
        DogsDogIdDeleteResponse2,
        DogsDogIdDeleteResponse3,
    ]
]:
    """
    Remove a dog profile
    """
    pass


@app.put(
    '/dogs/{dogId}',
    response_model=DogWithId,
    responses={
        '400': {'model': DogsDogIdPutResponse},
        '401': {'model': DogsDogIdPutResponse1},
        '404': {'model': DogsDogIdPutResponse2},
        '500': {'model': DogsDogIdPutResponse3},
    },
    tags=['Dogs'],
)
def update_dog_profile(
    dog_id: str = Path(..., alias='dogId'), body: Dog = ...
) -> Union[
    DogWithId,
    DogsDogIdPutResponse,
    DogsDogIdPutResponse1,
    DogsDogIdPutResponse2,
    DogsDogIdPutResponse3,
]:
    """
    Update dog details for a specific dog
    """
    pass
