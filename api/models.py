# generated by fastapi-codegen:
#   filename:  ./contract/dog_walker.1.oas.yaml
#   timestamp: 2024-12-21T15:00:02+00:00

from __future__ import annotations

from enum import Enum
from typing import List, Optional, Union

from pydantic import BaseModel, Extra, Field, conint, constr


class Sex(Enum):
    Male = 'Male'
    Female = 'Female'


class BreedEnum(Enum):
    Afghan_Hound = 'Afghan Hound'
    Airedale_Terrier = 'Airedale Terrier'
    Akita = 'Akita'
    Alaskan_Malamute = 'Alaskan Malamute'
    Australian_Shepherd = 'Australian Shepherd'
    Basenji = 'Basenji'
    Beagle = 'Beagle'
    Belgian_Malinois = 'Belgian Malinois'
    Belgian_Sheepdog = 'Belgian Sheepdog'
    Belgian_Tervuren = 'Belgian Tervuren'
    Bernese_Mountain_Dog = 'Bernese Mountain Dog'
    Bichon_Frise = 'Bichon Frise'
    Bloodhound = 'Bloodhound'
    Border_Collie = 'Border Collie'
    Borzoi = 'Borzoi'
    Boston_Terrier = 'Boston Terrier'
    Bouvier_des_Flandres = 'Bouvier des Flandres'
    Boxer = 'Boxer'
    Briard = 'Briard'
    Brittany = 'Brittany'
    Brussels_Griffon = 'Brussels Griffon'
    Bull_Terrier = 'Bull Terrier'
    Bullmastiff = 'Bullmastiff'
    Cairn_Terrier = 'Cairn Terrier'
    Cardigan_Welsh_Corgi = 'Cardigan Welsh Corgi'
    Cavalier_King_Charles_Spaniel = 'Cavalier King Charles Spaniel'
    Chesapeake_Bay_Retriever = 'Chesapeake Bay Retriever'
    Chihuahua = 'Chihuahua'
    Chinese_Crested = 'Chinese Crested'
    Chinese_Shar_Pei = 'Chinese Shar-Pei'
    Clumber_Spaniel = 'Clumber Spaniel'
    Cocker_Spaniel = 'Cocker Spaniel'
    Curly_Coated_Retriever = 'Curly-Coated Retriever'
    Dachshund = 'Dachshund'
    Dalmatian = 'Dalmatian'
    Doberman_Pinscher = 'Doberman Pinscher'
    English_Cocker_Spaniel = 'English Cocker Spaniel'
    English_Foxhound = 'English Foxhound'
    English_Setter = 'English Setter'
    English_Springer_Spaniel = 'English Springer Spaniel'
    French_Bulldog = 'French Bulldog'
    German_Shepherd = 'German Shepherd'
    Golden_Retriever = 'Golden Retriever'
    Gordon_Setter = 'Gordon Setter'
    Great_Dane = 'Great Dane'
    Havanese = 'Havanese'
    Irish_Setter = 'Irish Setter'
    Irish_Wolfhound = 'Irish Wolfhound'
    Italian_Greyhound = 'Italian Greyhound'
    Japanese_Chin = 'Japanese Chin'
    Keeshond = 'Keeshond'
    Komondor = 'Komondor'
    Kuvasz = 'Kuvasz'
    Lakeland_Terrier = 'Lakeland Terrier'
    Labrador_Retriever = 'Labrador Retriever'
    Leonberger = 'Leonberger'
    Lhasa_Apso = 'Lhasa Apso'
    Maltese = 'Maltese'
    Manchester_Terrier = 'Manchester Terrier'
    Miniature_Schnauzer = 'Miniature Schnauzer'
    Neapolitan_Mastiff = 'Neapolitan Mastiff'
    Newfoundland = 'Newfoundland'
    Norfolk_Terrier = 'Norfolk Terrier'
    Norwich_Terrier = 'Norwich Terrier'
    Papillon = 'Papillon'
    Pembroke_Welsh_Corgi = 'Pembroke Welsh Corgi'
    Petit_Basset_Griffon_Vendeen = 'Petit Basset Griffon Vendeen'
    Pharaoh_Hound = 'Pharaoh Hound'
    Plott = 'Plott'
    Pointer = 'Pointer'
    Polish_Lowland_Sheepdog = 'Polish Lowland Sheepdog'
    Pomeranian = 'Pomeranian'
    Poodle = 'Poodle'
    Portuguese_Water_Dog = 'Portuguese Water Dog'
    Pug = 'Pug'
    Puli = 'Puli'
    Redbone_Coonhound = 'Redbone Coonhound'
    Rhodesian_Ridgeback = 'Rhodesian Ridgeback'
    Rottweiler = 'Rottweiler'
    Saint_Bernard = 'Saint Bernard'
    Saluki = 'Saluki'
    Samoyed = 'Samoyed'
    Schipperke = 'Schipperke'
    Scottish_Deerhound = 'Scottish Deerhound'
    Scottish_Terrier = 'Scottish Terrier'
    Sealyham_Terrier = 'Sealyham Terrier'
    Setter = 'Setter'
    Shetland_Sheepdog = 'Shetland Sheepdog'
    Shiba_Inu = 'Shiba Inu'
    Shih_Tzu = 'Shih Tzu'
    Siberian_Husky = 'Siberian Husky'
    Silky_Terrier = 'Silky Terrier'
    Skye_Terrier = 'Skye Terrier'
    Sloughi = 'Sloughi'
    Soft_Coated_Wheaten_Terrier = 'Soft Coated Wheaten Terrier'
    Staffordshire_Bull_Terrier = 'Staffordshire Bull Terrier'
    Standard_Schnauzer = 'Standard Schnauzer'
    Sussex_Spaniel = 'Sussex Spaniel'
    Swedish_Vallhund = 'Swedish Vallhund'
    Tibetan_Mastiff = 'Tibetan Mastiff'
    Tibetan_Spaniel = 'Tibetan Spaniel'
    Tibetan_Terrier = 'Tibetan Terrier'
    Toy_Fox_Terrier = 'Toy Fox Terrier'
    Treeing_Walker_Coonhound = 'Treeing Walker Coonhound'
    Vizsla = 'Vizsla'
    Weimaraner = 'Weimaraner'
    Welsh_Corgi = 'Welsh Corgi'
    West_Highland_White_Terrier = 'West Highland White Terrier'
    Whippet = 'Whippet'
    Wirehaired_Pointing_Griffon = 'Wirehaired Pointing Griffon'
    Xoloitzcuintli = 'Xoloitzcuintli'
    Yorkshire_Terrier = 'Yorkshire Terrier'


class Dog(BaseModel):
    name: constr(min_length=2, max_length=20) = Field(
        ..., description='Name of the dog.', example='Mika'
    )
    sex: Sex = Field(..., description='Sex of the dog.', example='Female')
    yearOfBirth: conint(ge=2000, le=2025) = Field(
        ..., description='Year of birth of the dog.', example=2015
    )
    breed: List[BreedEnum] = Field(
        ...,
        description='Breed of the dog.',
        example=['Staffordshire Bull Terrier'],
        max_items=3,
    )
    notes: Optional[constr(max_length=100)] = Field(
        None,
        description='Additional notes about the dog.',
        example='Mika is a good girl.',
    )
    images: Optional[List[str]] = Field(None, description='Images of the dog.')


class DogWithId(Dog):
    id: Optional[str] = Field(
        None, description='Unique identifier for the dog.', example='mika-2015-0001'
    )


class Pagination(BaseModel):
    class Config:
        extra = Extra.forbid

    total: int = Field(..., description='Total number of dogs available.', example=4)
    currentPage: int = Field(
        ..., description='The current page being viewed.', example=1
    )
    perPage: int = Field(..., description='Number of dogs per page.', example=10)


class DogsPostResponse(BaseModel):
    error: Optional[str] = Field(
        None, description='General error message for the bad request.'
    )
    details: Optional[List[str]] = Field(None, max_items=3)


class DogsPostResponse1(BaseModel):
    error: Optional[str] = Field(
        None, description='A message indicating authorization failure.'
    )


class DogsPostResponse2(BaseModel):
    error: Optional[str] = Field(
        None, description='General error message indicating a server issue.'
    )
    message: Optional[str] = Field(
        None, description='Additional details about the error, if available.'
    )


class Data(BaseModel):
    dogs: Optional[List[DogWithId]] = None


class Pagination2(BaseModel):
    pass


class Pagination1(BaseModel):
    pagination: Optional[Union[List[Pagination], Pagination2]] = None


class DogsGetResponse(BaseModel):
    class Config:
        extra = Extra.forbid

    data: Data
    pagination: Pagination1


class DogsGetResponse1(BaseModel):
    error: Optional[str] = Field(
        None, description='A message indicating authorization failure.'
    )


class DogsGetResponse2(BaseModel):
    error: Optional[str] = Field(
        None, description='General error message indicating a server issue.'
    )
    message: Optional[str] = Field(
        None, description='Additional details about the error, if available.'
    )


class DogsDogIdGetResponse(BaseModel):
    error: Optional[str] = Field(
        None, description='A message indicating authorization failure.'
    )


class DogsDogIdGetResponse1(BaseModel):
    error: Optional[str] = Field(
        None, description='A message indicating that the resource was not found.'
    )


class DogsDogIdGetResponse2(BaseModel):
    error: Optional[str] = Field(
        None, description='General error message indicating a server issue.'
    )
    message: Optional[str] = Field(
        None, description='Additional details about the error, if available.'
    )


class DogsDogIdDeleteResponse(BaseModel):
    message: Optional[str] = Field(None, description='Deletion message.')


class DogsDogIdDeleteResponse1(BaseModel):
    error: Optional[str] = Field(
        None, description='A message indicating authorization failure.'
    )


class DogsDogIdDeleteResponse2(BaseModel):
    error: Optional[str] = Field(
        None, description='A message indicating that the resource was not found.'
    )


class DogsDogIdDeleteResponse3(BaseModel):
    error: Optional[str] = Field(
        None, description='General error message indicating a server issue.'
    )
    message: Optional[str] = Field(
        None, description='Additional details about the error, if available.'
    )


class DogsDogIdPutResponse(BaseModel):
    error: Optional[str] = Field(
        None, description='General error message for the bad request.'
    )
    details: Optional[List[str]] = Field(None, max_items=3)


class DogsDogIdPutResponse1(BaseModel):
    error: Optional[str] = Field(
        None, description='A message indicating authorization failure.'
    )


class DogsDogIdPutResponse2(BaseModel):
    error: Optional[str] = Field(
        None, description='A message indicating that the resource was not found.'
    )


class DogsDogIdPutResponse3(BaseModel):
    error: Optional[str] = Field(
        None, description='General error message indicating a server issue.'
    )
    message: Optional[str] = Field(
        None, description='Additional details about the error, if available.'
    )
